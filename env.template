# Email Configuration - Resend
# Copy this file to .env.local and update with your actual values
# Get your API key from: https://resend.com/api-keys

RESEND_API_KEY=your-resend-api-key-here

# Email sender domain (must be verified in Resend dashboard)
# Default: no-reply@yec.in.th
# You can change this to any verified domain in your Resend account

# Email Transport Configuration
# EMAIL_MODE: DRY_RUN (default, safe for CI), CAPPED (local testing), FULL (production)
EMAIL_MODE=DRY_RUN

# Capped Mode Configuration (when EMAIL_MODE=CAPPED)
EMAIL_CAP_MAX_PER_RUN=2
EMAIL_ALLOWLIST=you@example.com,qa@example.com
EMAIL_SUBJECT_PREFIX=[E2E]
BLOCK_NON_ALLOWLIST=true

# Supabase Configuration
# Get these values from your Supabase project dashboard
# Project URL: https://supabase.com/dashboard/project/[project-id]/settings/api

# Server-side (API routes) - Service role key for admin operations
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# Client-side (browser) - Anon key for public operations
NEXT_PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key-here

# Supabase CLI Test Configuration (for E2E tests)
# These are required for running supabase-cli-connection.e2e.spec.ts
# Get your access token from: https://supabase.com/dashboard/account/tokens
SUPABASE_ACCESS_TOKEN=sbp_your_access_token_here
SUPABASE_PROJECT_REF=your_project_reference_here
SUPABASE_DB_PASSWORD=your_database_password_here

# Application Configuration
# Base URL for the application (used for magic link redirects)
# Development: http://localhost:8080
# Production: https://your-domain.com
NEXT_PUBLIC_APP_URL=http://localhost:8080

# Admin Access Control
# Comma-separated list of admin email addresses (case-insensitive)
# Example: ADMIN_EMAILS=admin1@your.org,admin2@your.org,superuser@your.org
# This is used for initial seeding of admin users
ADMIN_EMAILS=admin1@your.org,admin2@your.org

# Admin User Seeding (Optional)
# Secret key for seeding admin users in production
# Generate a secure random string for this
ADMIN_SEED_SECRET=your-secure-seed-secret-here

# Cron Job Authentication
# Secret key for authenticating cron job requests (required for email dispatch)
# Generate a secure random string for this
CRON_SECRET=your-secure-cron-secret-here

# Note: The service role key has admin privileges, keep it secure!
# The anon key is safe to expose to the browser 