name: Lint, ESLint, Check format, Prettier

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci

      - name: ESLint (strict)
        run: npm run lint:strict

      - name: Prettier check (non-blocking on PR)
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          npx prettier -c "{src,app,apps,packages,lib,components,scripts,server,client}/**/*.{ts,tsx,js,jsx,json,css,md}" \
            || echo "::warning::Prettier found issues. Run 'npm run format'."

      - name: Prettier check (blocking on push)
        if: github.event_name != 'pull_request'
        run: |
          npx prettier -c "{src,app,apps,packages,lib,components,scripts,server,client}/**/*.{ts,tsx,js,jsx,json,css,md}"

      - name: Report required context (ruleset-compat)
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          JOB_STATUS: ${{ job.status }}
        with:
          script: |
            const stateMap = { success: 'success', failure: 'failure', cancelled: 'failure' };
            const state = stateMap[process.env.JOB_STATUS] || 'failure';
            const sha = context.payload.pull_request.head.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'Lint, ESLint, Check format, Prettier / lint (pull_request)',
              description: `Reported from run ${context.runId}`,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            })

