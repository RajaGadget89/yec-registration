name: DB — Migrate to Staging

on:
  workflow_dispatch: {}
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/seed.sql'
      - '.github/workflows/db-migrate-staging.yml'
  push:
    branches: [main, develop]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/seed.sql'

concurrency:
  group: db-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_on_shadow:
    name: Test migrations on Shadow DB
    runs-on: ubuntu-latest
    env:
      SUPABASE_TELEMETRY_DISABLED: "1"
    steps:
      - uses: actions/checkout@v4

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - uses: supabase/setup-cli@v1
        with:
          version: latest   # ใช้ CLI ล่าสุด อ่าน config.toml ได้แน่นอน

      - name: Start local Supabase stack (shadow)
        run: |
          # สตาร์ทสแต็ก local (มี Postgres + extensions ที่จำเป็น)
          supabase start
          supabase status

      - name: Apply migrations to shadow
        env:
          SHADOW_DB_URL: postgresql://postgres:postgres@localhost:54322/postgres
        shell: bash
        run: |
          set -euo pipefail
          # reset + apply migrations ลง shadow (non-interactive)
          yes | supabase db reset --db-url "$SHADOW_DB_URL"
          # seed (ถ้ามี)
          if [ -f supabase/seed.sql ]; then psql "$SHADOW_DB_URL" -f supabase/seed.sql; fi

  push_to_staging:
    name: Push migrations to Staging
    needs: [test_on_shadow]
    runs-on: ubuntu-latest
    env:
      SUPABASE_TELEMETRY_DISABLED: "1"
    steps:
      - uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Push → Staging (link or DB URL fallback)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SB_STAGING_REF: ${{ secrets.SB_STAGING_REF }}
          # (ถ้ามีปัญหา link ให้เพิ่ม secret นี้ แล้วจะใช้ fallback อัตโนมัติ)
          # STAGING_DB_URL: ${{ secrets.STAGING_DB_URL }}
        shell: bash
        run: |
          set -euo pipefail
          echo "Trying: supabase link → supabase db push"
          if supabase link --project-ref "$SB_STAGING_REF"; then
            supabase db push
            exit 0
          fi
          echo "Link failed. Checking STAGING_DB_URL fallback..."
          if [[ -n "${STAGING_DB_URL:-}" ]]; then
            supabase db push --db-url "$STAGING_DB_URL"
            exit 0
          fi
          echo "No STAGING_DB_URL provided and link failed." >&2
          exit 1

