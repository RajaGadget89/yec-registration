name: DB — Migrate to Staging

on:
  workflow_dispatch: {}
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/seed.sql'
      - '.github/workflows/db-migrate-staging.yml'
  push:
    branches: [main, develop]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/seed.sql'

concurrency:
  group: db-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_on_shadow:
    name: Test migrations on Shadow DB
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      - uses: supabase/setup-cli@v1
      - name: Apply migrations to shadow
        env:
          SHADOW_DB_URL: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          # บางเวอร์ชันของ CLI จะถามยืนยัน reset; ใช้ `yes |` ป้อน y ให้อัตโนมัติ
          yes | supabase db reset --db-url "$SHADOW_DB_URL"
          if [ -f supabase/seed.sql ]; then psql "$SHADOW_DB_URL" -f supabase/seed.sql; fi

  push_to_staging:
    name: Push migrations to Staging
    needs: [test_on_shadow]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
      - name: Push → Staging (link or DB URL fallback)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SB_STAGING_REF: ${{ secrets.SB_STAGING_REF }}
          # STAGING_DB_URL: ${{ secrets.STAGING_DB_URL }}   # (ถ้ามี)
        shell: bash
        run: |
          set -euo pipefail
          echo "Trying: supabase link → supabase db push"
          if supabase link --project-ref "$SB_STAGING_REF"; then
            supabase db push
            exit 0
          fi
          echo "Link failed. Checking STAGING_DB_URL fallback..."
          if [[ -n "${STAGING_DB_URL:-}" ]]; then
            supabase db push --db-url "$STAGING_DB_URL"
            exit 0
          fi
          echo "No STAGING_DB_URL provided and link failed." >&2
          exit 1

