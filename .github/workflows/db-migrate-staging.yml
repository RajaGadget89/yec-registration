name: DB — Migrate to Staging

on:
  workflow_dispatch: {}
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/seed.sql'
      - '.github/workflows/db-migrate-staging.yml'
  push:
    branches: [main, develop]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/seed.sql'

concurrency:
  group: db-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_on_shadow:
    name: Test migrations on Shadow DB
    runs-on: ubuntu-latest
    env: { SUPABASE_TELEMETRY_DISABLED: "1" }
    steps:
      - uses: actions/checkout@v4
      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      - uses: supabase/setup-cli@v1
        with: { version: latest }
      - name: Start local Supabase stack (shadow)
        run: |
          supabase start
          supabase status
      - name: Apply migrations to shadow
        env:
          SHADOW_DB_URL: postgresql://postgres:postgres@localhost:54322/postgres
        shell: bash
        run: |
          set -euo pipefail
          printf 'y\n' | supabase db reset --db-url "$SHADOW_DB_URL"
          if [ -f supabase/seed.sql ]; then psql "$SHADOW_DB_URL" -f supabase/seed.sql; fi

  push_to_staging:
    name: Push migrations to Staging (via DB URL)
    needs: [test_on_shadow]
    runs-on: ubuntu-latest
    env:
      SUPABASE_TELEMETRY_DISABLED: "1"
      STAGING_DB_URL: ${{ secrets.STAGING_DB_URL }}   # ต้องมี
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with: { version: latest }
      - name: Push → Staging (no prompt)
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${STAGING_DB_URL:-}" ]]; then
            echo "Missing STAGING_DB_URL secret" >&2
            exit 1
          fi
          supabase db push --db-url "$STAGING_DB_URL"

