name: E2E Audit Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit_diag:
    name: audit_diag
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - run: npm ci
      - run: npx playwright install --with-deps
      - name: Start development server
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ENV: 'staging'
        run: |
          echo "üöÄ Starting development server..."
          npm run dev &
          echo "‚è≥ Waiting for server to start..."
          sleep 10
          echo "üîç Checking if server is ready..."
          curl -f http://localhost:8080/api/health || (echo "‚ùå Server not ready" && exit 1)
          echo "‚úÖ Server is ready!"
      - name: Run @audit diag tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ENV: 'staging'
        run: |
          set -e
          echo "üîç Running audit diagnostic tests without authentication setup..."
          if [ -f "tests/e2e/audit-diag.e2e.spec.ts" ]; then
            # Use CI-specific configuration that skips global setup
            npx playwright test tests/e2e/audit-diag.e2e.spec.ts --config=playwright.ci.config.ts --reporter=line
          else
            npx playwright test --grep="@audit @diag" --config=playwright.ci.config.ts --reporter=line
          fi
          
          echo "üõë Stopping development server..."
          pkill -f "npm run dev" || true

      - name: Cleanup server
        if: always()
        run: |
          echo "üßπ Cleaning up server processes..."
          pkill -f "npm run dev" || true
          pkill -f "next dev" || true

      - name: Report required context (ruleset-compat)
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          JOB_STATUS: ${{ job.status }}
        with:
          script: |
            const stateMap = { success: 'success', failure: 'failure', cancelled: 'failure' };
            const state = stateMap[process.env.JOB_STATUS] || 'failure';
            const sha = context.payload.pull_request.head.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'E2E Audit Tests / audit_diag (pull_request)',
              description: `Reported from run ${context.runId}`,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            })

