name: PRV

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}

concurrency:
  group: prv-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  statuses: write

jobs:
  detect:
    name: Detect
    runs-on: ubuntu-latest
    outputs:
      db_changed: ${{ steps.filter.outputs.db }}
      db_files: ${{ steps.filter.outputs.db_files }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          list-files: shell
          filters: |
            db:
              - 'migrations/**/*.sql'

      # รายงานทั้งชื่อยาว (ruleset ปัจจุบัน) และชื่อสั้น (สำหรับย้าย ruleset ในอนาคต)
      - name: Report required contexts (long + short)
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env: { JOB_STATUS: ${{ job.status }} }
        with:
          script: |
            const map = { success:'success', failure:'failure', cancelled:'failure' };
            const state = map[process.env.JOB_STATUS] || 'failure';
            const sha = context.payload.pull_request.head.sha;
            const contexts = [
              'PR Validation (DB Migration + E2E Tests) + / Detect DB Changes (pull_request)', // ruleset เดิม
              'PRV / Detect (pull_request)' // ชื่อสั้นใหม่
            ];
            for (const ctx of contexts) {
              await github.rest.repos.createCommitStatus({
                owner: context.repo.owner, repo: context.repo.repo, sha, state,
                context: ctx,
                description: `Reported from run ${context.runId}`,
                target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
              });
            }

  shadow:
    name: Shadow
    needs: detect
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: No DB changes → fast-pass
        if: needs.detect.outputs.db_changed != 'true'
        run: echo "No DB changes; skipping heavy DB steps."

      - name: Setup Supabase CLI
        if: needs.detect.outputs.db_changed == 'true'
        uses: supabase/setup-cli@v1
        with: { version: latest }

      - name: Build & test on shadow
        if: needs.detect.outputs.db_changed == 'true'
        run: |
          set -euo pipefail
          mkdir -p supabase/migrations
          cp -a migrations/. supabase/migrations/ || true
          supabase start
          printf 'y\n' | supabase db reset

      - name: Report short context for shadow (optional)
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env: { JOB_STATUS: ${{ job.status }} }
        with:
          script: |
            const map = { success:'success', failure:'failure', cancelled:'failure' };
            const sha = context.payload.pull_request.head.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner, repo: context.repo.repo, sha,
              state: map[process.env.JOB_STATUS] || 'failure',
              context: 'PRV / Shadow (pull_request)',
              description: `Reported from run ${context.runId}`,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });

