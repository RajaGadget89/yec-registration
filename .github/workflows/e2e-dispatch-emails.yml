name: E2E Dispatch Emails Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dispatch_emails:
    name: dispatch_emails
    runs-on: ubuntu-latest
    if: |
      github.event_name != 'pull_request' ||
      github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: OS deps for node-canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libcairo2-dev libpango1.0-dev libjpeg-dev \
            libgif-dev librsvg2-dev libpixman-1-dev

      - run: npm ci
      - run: npx playwright install --with-deps

      - name: Create .env.ci from secrets
        run: |
          echo "CRON_SECRET=${{ secrets.CRON_SECRET }}" >> .env.ci
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.STAGING_SUPABASE_URL }}" >> .env.ci
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.STAGING_SUPABASE_ANON }}" >> .env.ci
          echo "SUPABASE_URL=${{ secrets.STAGING_SUPABASE_URL }}" >> .env.ci
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.STAGING_SERVICE_ROLE }}" >> .env.ci
          echo "RESEND_API_KEY=${{ secrets.RESEND_TEST_KEY }}" >> .env.ci
          echo "SUPABASE_ENV=staging" >> .env.ci
          echo "DISPATCH_DRY_RUN=true" >> .env.ci
          echo "EMAIL_MODE=DRY_RUN" >> .env.ci

      - name: Run dispatch-emails e2e
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_ENV: 'staging'
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          DISPATCH_DRY_RUN: 'true'
        run: npx playwright test tests/e2e/dispatch-emails.e2e.spec.ts --reporter=line

      - name: Report required context (ruleset-compat)
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          JOB_STATUS: ${{ job.status }}
        with:
          script: |
            const stateMap = { success: 'success', failure: 'failure', cancelled: 'failure' };
            const state = stateMap[process.env.JOB_STATUS] || 'failure';
            const sha = context.payload.pull_request.head.sha;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state,
              context: 'E2E Dispatch Emails Tests / dispatch_emails (pull_request)',
              description: `Reported from run ${context.runId}`,
              target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            })

